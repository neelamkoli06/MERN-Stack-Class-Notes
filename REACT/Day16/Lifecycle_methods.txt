
Lifecycle Methods  in a Class component

https://medium.com/how-to-react/react-life-cycle-methods-with-examples-2bdb7465332b


stages of your react application component

3 Phases of your component

Mounting – Birth of your component- Add component to the DOM Tree
Update – Growth of your component - Updates
Unmount – Death of your component - Remove or Destroy From DOM Node Tree


ErrorHandling- 
static getDerivedStateFromErrors()
{

}



1-Mounting phase-  initial stage of your react application

//getinitialstate()- executed before creation of component


//constructor()
//render()
//getDerivedStateFromProps(props,state)- each and every rendering called


//componentDidMount();-  
is same like useEffect()
//api calling
called After render Method




2 Updating Phase - when we Updating something in our component


//
// Called to determine whether the change in props and state should trigger a re-render.
// Component always returns true.
//PureComponent implements a shallow comparison on 
// props and state and returns true if any props or states have changed.

// If false is returned, Component#render, componentWillUpdate and componentDidUpdate will not be called.


shouldComponentUpdate(nextProps,nextState)
{
 return true;
}





getSnapshotBeforeUpdate() is another new lifecycle method introduced in React recently.
 This will be a safer alternative to the previous lifecycle method componentWillUpdate().


 It is called right before the DOM is updated.
  The value that is returned from getSnapshotBeforeUpdate() is passed on to componentDidUpdate().

Keep in mind that this method should also be used rarely or not used at all.

getSnapShotBeforeUpdate(prevProps,prevState)
{
return null;
}

*********************************************************************

Called immediately after updating occurs. Not called for the initial render.
The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.


componentDidUpdate(prevProps,prevState,snapshot)
{
    return true;
  
}



***************************************************

Unmounting Phase


    // Called immediately before a component is destroyed or Unmounted
    //  Perform any necessary cleanup in this method, 
    // such as cancelled network requests, 
    // or cleaning up any DOM elements created in componentDidMount.

    componentWillUnmount()
    {

    }

component will never be re-rendered and because of that we cannot call setState() 
during this lifecycle method.



    ****************************************************
    
    The static keyword defines static methods for classes.



*******************************************************************
Static methods are called directly on the class (Car from the example above) - 
without creating an instance/object (mycar) of the class.



***************************************************************************


Reference


https://www.java67.com/2021/09/ow-to-use-lifecycle-methods-in-functinal.html